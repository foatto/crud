/*
 * This file is generated by jOOQ.
 */
package foatto.jooq.core


import foatto.jooq.core.tables.SystemAlert
import foatto.jooq.core.tables.SystemAlias
import foatto.jooq.core.tables.SystemFileStore
import foatto.jooq.core.tables.SystemNew
import foatto.jooq.core.tables.SystemOtherOwner
import foatto.jooq.core.tables.SystemPermission
import foatto.jooq.core.tables.SystemReplicationReceive
import foatto.jooq.core.tables.SystemReplicationSend
import foatto.jooq.core.tables.SystemRole
import foatto.jooq.core.tables.SystemRolePermission
import foatto.jooq.core.tables.SystemUserProperty
import foatto.jooq.core.tables.SystemUserRole
import foatto.jooq.core.tables.SystemUsers

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC = Public()
    }

    /**
     * The table <code>public.system_alert</code>.
     */
    val SYSTEM_ALERT get() = SystemAlert.SYSTEM_ALERT

    /**
     * The table <code>public.system_alias</code>.
     */
    val SYSTEM_ALIAS get() = SystemAlias.SYSTEM_ALIAS

    /**
     * The table <code>public.system_file_store</code>.
     */
    val SYSTEM_FILE_STORE get() = SystemFileStore.SYSTEM_FILE_STORE

    /**
     * The table <code>public.system_new</code>.
     */
    val SYSTEM_NEW get() = SystemNew.SYSTEM_NEW

    /**
     * The table <code>public.system_other_owner</code>.
     */
    val SYSTEM_OTHER_OWNER get() = SystemOtherOwner.SYSTEM_OTHER_OWNER

    /**
     * The table <code>public.system_permission</code>.
     */
    val SYSTEM_PERMISSION get() = SystemPermission.SYSTEM_PERMISSION

    /**
     * The table <code>public.system_replication_receive</code>.
     */
    val SYSTEM_REPLICATION_RECEIVE get() = SystemReplicationReceive.SYSTEM_REPLICATION_RECEIVE

    /**
     * The table <code>public.system_replication_send</code>.
     */
    val SYSTEM_REPLICATION_SEND get() = SystemReplicationSend.SYSTEM_REPLICATION_SEND

    /**
     * The table <code>public.system_role</code>.
     */
    val SYSTEM_ROLE get() = SystemRole.SYSTEM_ROLE

    /**
     * The table <code>public.system_role_permission</code>.
     */
    val SYSTEM_ROLE_PERMISSION get() = SystemRolePermission.SYSTEM_ROLE_PERMISSION

    /**
     * The table <code>public.system_user_property</code>.
     */
    val SYSTEM_USER_PROPERTY get() = SystemUserProperty.SYSTEM_USER_PROPERTY

    /**
     * The table <code>public.system_user_role</code>.
     */
    val SYSTEM_USER_ROLE get() = SystemUserRole.SYSTEM_USER_ROLE

    /**
     * The table <code>public.system_users</code>.
     */
    val SYSTEM_USERS get() = SystemUsers.SYSTEM_USERS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        SystemAlert.SYSTEM_ALERT,
        SystemAlias.SYSTEM_ALIAS,
        SystemFileStore.SYSTEM_FILE_STORE,
        SystemNew.SYSTEM_NEW,
        SystemOtherOwner.SYSTEM_OTHER_OWNER,
        SystemPermission.SYSTEM_PERMISSION,
        SystemReplicationReceive.SYSTEM_REPLICATION_RECEIVE,
        SystemReplicationSend.SYSTEM_REPLICATION_SEND,
        SystemRole.SYSTEM_ROLE,
        SystemRolePermission.SYSTEM_ROLE_PERMISSION,
        SystemUserProperty.SYSTEM_USER_PROPERTY,
        SystemUserRole.SYSTEM_USER_ROLE,
        SystemUsers.SYSTEM_USERS
    )
}
