/*
 * This file is generated by jOOQ.
 */
package foatto.jooq.core.tables.records


import foatto.jooq.core.tables.SystemReplicationReceive

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Row2
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SystemReplicationReceiveRecord() : TableRecordImpl<SystemReplicationReceiveRecord>(SystemReplicationReceive.SYSTEM_REPLICATION_RECEIVE), Record2<String?, Long?> {

    var destName: String?
        set(value) = set(0, value)
        get() = get(0) as String?

    var timeKey: Long?
        set(value) = set(1, value)
        get() = get(1) as Long?

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row2<String?, Long?> = super.fieldsRow() as Row2<String?, Long?>
    override fun valuesRow(): Row2<String?, Long?> = super.valuesRow() as Row2<String?, Long?>
    override fun field1(): Field<String?> = SystemReplicationReceive.SYSTEM_REPLICATION_RECEIVE.DEST_NAME
    override fun field2(): Field<Long?> = SystemReplicationReceive.SYSTEM_REPLICATION_RECEIVE.TIME_KEY
    override fun component1(): String? = destName
    override fun component2(): Long? = timeKey
    override fun value1(): String? = destName
    override fun value2(): Long? = timeKey

    override fun value1(value: String?): SystemReplicationReceiveRecord {
        this.destName = value
        return this
    }

    override fun value2(value: Long?): SystemReplicationReceiveRecord {
        this.timeKey = value
        return this
    }

    override fun values(value1: String?, value2: Long?): SystemReplicationReceiveRecord {
        this.value1(value1)
        this.value2(value2)
        return this
    }

    /**
     * Create a detached, initialised SystemReplicationReceiveRecord
     */
    constructor(destName: String? = null, timeKey: Long? = null): this() {
        this.destName = destName
        this.timeKey = timeKey
    }
}
