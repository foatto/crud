/*
 * This file is generated by jOOQ.
 */
package foatto.jooq.core.keys


import foatto.jooq.core.tables.SystemAlert
import foatto.jooq.core.tables.SystemAlias
import foatto.jooq.core.tables.SystemOtherOwner
import foatto.jooq.core.tables.SystemPermission
import foatto.jooq.core.tables.SystemRole
import foatto.jooq.core.tables.SystemRolePermission
import foatto.jooq.core.tables.SystemUserRole
import foatto.jooq.core.tables.SystemUsers
import foatto.jooq.core.tables.records.SystemAlertRecord
import foatto.jooq.core.tables.records.SystemAliasRecord
import foatto.jooq.core.tables.records.SystemOtherOwnerRecord
import foatto.jooq.core.tables.records.SystemPermissionRecord
import foatto.jooq.core.tables.records.SystemRolePermissionRecord
import foatto.jooq.core.tables.records.SystemRoleRecord
import foatto.jooq.core.tables.records.SystemUserRoleRecord
import foatto.jooq.core.tables.records.SystemUsersRecord

import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val SYSTEM_ALERT_PKEY: UniqueKey<SystemAlertRecord> = Internal.createUniqueKey(SystemAlert.SYSTEM_ALERT, DSL.name("system_alert_pkey"), arrayOf(SystemAlert.SYSTEM_ALERT.ID), true)
val SYSTEM_ALIAS_PKEY: UniqueKey<SystemAliasRecord> = Internal.createUniqueKey(SystemAlias.SYSTEM_ALIAS, DSL.name("system_alias_pkey"), arrayOf(SystemAlias.SYSTEM_ALIAS.ID), true)
val SYSTEM_OTHER_OWNER_PKEY: UniqueKey<SystemOtherOwnerRecord> = Internal.createUniqueKey(SystemOtherOwner.SYSTEM_OTHER_OWNER, DSL.name("system_other_owner_pkey"), arrayOf(SystemOtherOwner.SYSTEM_OTHER_OWNER.ID), true)
val SYSTEM_PERMISSION_PKEY: UniqueKey<SystemPermissionRecord> = Internal.createUniqueKey(SystemPermission.SYSTEM_PERMISSION, DSL.name("system_permission_pkey"), arrayOf(SystemPermission.SYSTEM_PERMISSION.ID), true)
val SYSTEM_ROLE_PKEY: UniqueKey<SystemRoleRecord> = Internal.createUniqueKey(SystemRole.SYSTEM_ROLE, DSL.name("system_role_pkey"), arrayOf(SystemRole.SYSTEM_ROLE.ID), true)
val SYSTEM_ROLE_PERMISSION_PKEY: UniqueKey<SystemRolePermissionRecord> = Internal.createUniqueKey(SystemRolePermission.SYSTEM_ROLE_PERMISSION, DSL.name("system_role_permission_pkey"), arrayOf(SystemRolePermission.SYSTEM_ROLE_PERMISSION.ID), true)
val SYSTEM_USER_ROLE_PKEY: UniqueKey<SystemUserRoleRecord> = Internal.createUniqueKey(SystemUserRole.SYSTEM_USER_ROLE, DSL.name("system_user_role_pkey"), arrayOf(SystemUserRole.SYSTEM_USER_ROLE.ID), true)
val SYSTEM_USERS_PKEY: UniqueKey<SystemUsersRecord> = Internal.createUniqueKey(SystemUsers.SYSTEM_USERS, DSL.name("system_users_pkey"), arrayOf(SystemUsers.SYSTEM_USERS.ID), true)
